{"trial_id": "01", "hyperparameters": {"space": [{"class_name": "Int", "config": {"name": "conv_1_filter", "default": null, "conditions": [], "min_value": 24, "max_value": 48, "step": 8, "sampling": "linear"}}, {"class_name": "Int", "config": {"name": "conv_2_filter", "default": null, "conditions": [], "min_value": 48, "max_value": 72, "step": 8, "sampling": "linear"}}, {"class_name": "Int", "config": {"name": "conv_3_filter", "default": null, "conditions": [], "min_value": 96, "max_value": 136, "step": 8, "sampling": "linear"}}, {"class_name": "Int", "config": {"name": "dense_1_units", "default": null, "conditions": [], "min_value": 48, "max_value": 128, "step": 16, "sampling": "linear"}}, {"class_name": "Int", "config": {"name": "dense_2_units", "default": null, "conditions": [], "min_value": 32, "max_value": 128, "step": 16, "sampling": "linear"}}, {"class_name": "Float", "config": {"name": "dropout", "default": 0.0, "conditions": [], "min_value": 0.0, "max_value": 0.4, "step": 0.1, "sampling": "linear"}}, {"class_name": "Choice", "config": {"name": "learning_rate", "default": 0.01, "conditions": [], "values": [0.01, 0.001], "ordered": true}}], "values": {"conv_1_filter": 48, "conv_2_filter": 48, "conv_3_filter": 120, "dense_1_units": 96, "dense_2_units": 64, "dropout": 0.30000000000000004, "learning_rate": 0.001}}, "metrics": {"metrics": {}}, "score": null, "best_step": 0, "status": "FAILED", "message": "Traceback (most recent call last):\n  File \"C:\\Users\\ckami\\.virtualenvs\\AIBoobies\\lib\\site-packages\\keras_tuner\\engine\\base_tuner.py\", line 270, in _try_run_and_update_trial\n    self._run_and_update_trial(trial, *fit_args, **fit_kwargs)\n  File \"C:\\Users\\ckami\\.virtualenvs\\AIBoobies\\lib\\site-packages\\keras_tuner\\engine\\base_tuner.py\", line 235, in _run_and_update_trial\n    results = self.run_trial(trial, *fit_args, **fit_kwargs)\n  File \"C:\\Users\\ckami\\.virtualenvs\\AIBoobies\\lib\\site-packages\\keras_tuner\\engine\\tuner.py\", line 287, in run_trial\n    obj_value = self._build_and_fit_model(trial, *args, **copied_kwargs)\n  File \"C:\\Users\\ckami\\.virtualenvs\\AIBoobies\\lib\\site-packages\\keras_tuner\\engine\\tuner.py\", line 214, in _build_and_fit_model\n    results = self.hypermodel.fit(hp, model, *args, **kwargs)\n  File \"C:\\Users\\ckami\\.virtualenvs\\AIBoobies\\lib\\site-packages\\keras_tuner\\engine\\hypermodel.py\", line 144, in fit\n    return model.fit(*args, **kwargs)\n  File \"C:\\Users\\ckami\\.virtualenvs\\AIBoobies\\lib\\site-packages\\keras\\utils\\traceback_utils.py\", line 70, in error_handler\n    raise e.with_traceback(filtered_tb) from None\n  File \"C:\\Users\\ckami\\AppData\\Local\\Temp\\__autograph_generated_fileftzyw1ro.py\", line 15, in tf__train_function\n    retval_ = ag__.converted_call(ag__.ld(step_function), (ag__.ld(self), ag__.ld(iterator)), None, fscope)\nTypeError: in user code:\n\n    File \"C:\\Users\\ckami\\.virtualenvs\\AIBoobies\\lib\\site-packages\\keras\\engine\\training.py\", line 1284, in train_function  *\n        return step_function(self, iterator)\n    File \"C:\\Users\\ckami\\.virtualenvs\\AIBoobies\\lib\\site-packages\\keras\\engine\\training.py\", line 1268, in step_function  **\n        outputs = model.distribute_strategy.run(run_step, args=(data,))\n    File \"C:\\Users\\ckami\\.virtualenvs\\AIBoobies\\lib\\site-packages\\keras\\engine\\training.py\", line 1249, in run_step  **\n        outputs = model.train_step(data)\n    File \"C:\\Users\\ckami\\.virtualenvs\\AIBoobies\\lib\\site-packages\\keras\\engine\\training.py\", line 1050, in train_step\n        y_pred = self(x, training=True)\n    File \"C:\\Users\\ckami\\.virtualenvs\\AIBoobies\\lib\\site-packages\\keras\\utils\\traceback_utils.py\", line 70, in error_handler\n        raise e.with_traceback(filtered_tb) from None\n\n    TypeError: Exception encountered when calling layer 'conv2d' (type Conv2D).\n    \n    Value passed to parameter 'input' has DataType uint8 not in list of allowed values: float16, bfloat16, float32, float64, int32\n    \n    Call arguments received by layer 'conv2d' (type Conv2D):\n      \u2022 inputs=tf.Tensor(shape=(None, 50, 50, 3), dtype=uint8)\n\n"}